{
  "name": "scanf",
  "version": "1.0.2",
  "description": "C like scanf/sscanf module for node.js.",
  "main": "index.js",
  "engines": {
    "node": ">= 4"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha --reporter spec",
    "coveralls": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage"
  },
  "typings": "./lib/scanf.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/Lellansin/node-scanf.git"
  },
  "keywords": [
    "scanf",
    "sscanf",
    "readSync from stdin",
    "shell input"
  ],
  "author": {
    "name": "Lellansin"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Lellansin/node-scanf/issues"
  },
  "homepage": "https://github.com/Lellansin/node-scanf",
  "devDependencies": {
    "coveralls": "^2.11.8",
    "istanbul": "^0.4.2",
    "mocha": "^3.1.2",
    "should": "^11.1.1"
  },
  "readme": "# node-scanf [![NPM Version](https://badge.fury.io/js/scanf.svg)](http://badge.fury.io/js/scanf) [![Build Status](https://travis-ci.org/Lellansin/node-scanf.png?branch=master)](https://travis-ci.org/Lellansin/node-scanf) [![Coveralls Status](https://img.shields.io/coveralls/Lellansin/node-scanf/master.svg)](https://coveralls.io/github/Lellansin/node-scanf)\n\nDo you want simplely shell script input which have formats and sync return?\n\nDo you want a `sscanf` like function to parse format strings?\n\n`scanf` is a C like scanf/sscanf module for node.js which can help you with that.\n\n## Documentation\n\n*  [`Example`](#Example)\n  *  [`Quickly start`](#quickly-start)\n  *  [`C like format`](#c-like-format)\n*  [`Return`](#return)\n  *  [`Directly return`](#directly-return)\n  *  [`Array return`](#array-return)\n  *  [`Json return`](#json-return)\n*  [`sscanf`](#sscanf)\n\n## Installation\n```\nnpm install scanf\n```\n\n## Format support now\n\n* `%d` - integer\n* `%f` - float\n* `%s` - string\n* `%S` - string of line\n* `%x` - hex\n* `%o` - octal\n\n## Example\n\n### Quickly start\n```javascript\nvar scanf = require('scanf');\n\nconsole.log('Pleas input your name');\nvar name = scanf('%s');\n\nconsole.log('Pleas input your age');\nvar age = scanf('%d');\n\nconsole.log('your name [%s] type: [%s]', name, typeof name);\nconsole.log('your age [%s] type: [%s]', age, typeof age);\n```\n\nREPL\n\n```\nPleas input your name\n> Barack\\ Obama\nPleas input your age\n> 24\nyour name [Barack Obama] type: [string]\nyour age [24] type: [number]\n```\n\n\n### C like format\n```javascript\nvar scanf = require('scanf');\n\nconsole.log('when are you born? \\(Year-month-day\\)');\nvar date = scanf('%d-%d-%d');\n\nconsole.log('your birthday [%s]', date);\n```\n\nREPL\n\n```\nwhen are you born? (Year-month-day)\n> 1990-01-01\nyour birthday [1990,1,1]\n```\n\n## Return\n\n### Directly return\n\n```javascript\nvar scanf = require('scanf');\n\nvar number = scanf('%d');\n\nconsole.log('number', number);\n```\n\nREPL\n\n```\n>> 2015    \nnumber 2015\n```\n\n### Array return\n\n```javascript\nvar scanf = require('scanf');\n\nvar result = scanf('%s%d%d');\n\nconsole.log('result', result);\n```\n\nREPL\n\n```\n>> Alan 24 180        \nresult [ 'Alan', 24, 180 ]\n```\n\n### Json return\n\n```javascript\nvar scanf = require('scanf');\n\nvar result = scanf('%d %f %s %x %o', 'integer', 'float', 'string', 'hex', 'octal');\n\nconsole.log('result', result);\n```\n\nREPL\n\n```\n>> 12 3.1415926 hello 1F 10    \nresult { \n  integer: 12,\n  float: 3.1415926,\n  string: 'hello',\n  hex: 31,\n  octal: 8 \n}\n```\n\n## sscanf\n\nREPL\n\n```javascript\n>> var sscanf = require('scanf').sscanf;\nundefined\n>> sscanf('12 34', '%d');\n12\n>> sscanf('Alan 20 180', '%s%d%d')\n[ 'Alan', 20, 180 ]\n>> sscanf('12 3.1415926 hello', '%d %f %s', 'month', 'pi', 'world');\n{ month: 12, pi: 3.1415926, world: 'hello' }\n>> sscanf('   14   ??  Ss     0:07.59 /usr/sbin/securityd -i', '%d %s %s %s %s %s', 'pid', 'tty', 'stat', 'time', 'exec', 'param');\n{ pid: 14,\n  tty: '??',\n  stat: 'Ss',\n  time: '0:07.59',\n  exec: '/usr/sbin/securityd',\n  param: '-i' }\n```\n\nyou can see the ./tests files for more detail.\n\nIf there are some formats not support or go broken, you can contact author with email `lellansin@gmail.com`.\n\n# Contributors\n\n  - [lellansin](https://github.com/Lellansin)\n  - [piranna](https://github.com/piranna)\n  - [samchon](https://github.com/samchon)\n\n# License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "_id": "scanf@1.0.2",
  "_shasum": "391cad4beff248b170e5bf968cdec8e3c8549026",
  "_from": "scanf@",
  "_resolved": "https://registry.npmjs.org/scanf/-/scanf-1.0.2.tgz"
}
